// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`testCond "checkbox", {"max": 3, "min": 1}, '' 1`] = `"true, "`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '-8' 1`] = `"true, "`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '-8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '-8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '-8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '-8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '-8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '8' 1`] = `"true, "`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 1`] = `"true, "`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 'Carrie Mathison' 1`] = `"true, "`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 'Carrie Mathison' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 'Carrie Mathison' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 'Carrie Mathison' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 'Carrie Mathison' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 'Carrie Mathison' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 'false' 1`] = `"true, "`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 'false' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 'false' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 'false' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 'false' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 'false' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 'true' 1`] = `"true, "`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 'true' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 'true' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 'true' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 'true' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 'true' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, -8 1`] = `"true, "`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, -8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, -8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, -8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, -8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, -8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 0 1`] = `"true, "`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 0 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 0 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 0 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 0 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 0 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 8 1`] = `"true, "`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, 8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, false 1`] = `"true, "`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, false 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, false 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, false 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, false 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, false 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, null 1`] = `"true, "`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, null 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, null 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, null 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, null 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, null 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, true 1`] = `"true, "`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, true 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, true 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, true 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, true 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, true 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, undefined 1`] = `"true, "`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, undefined 2`] = `"true, "`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, undefined 3`] = `"true, "`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, undefined 4`] = `"true, "`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, undefined 5`] = `"true, "`;

exports[`testCond "checkbox", {"max": 3, "min": 1}, undefined 6`] = `"true, "`;

exports[`testCond "checkbox", false, '' 1`] = `"true, "`;

exports[`testCond "checkbox", false, '' 2`] = `"false, this must be a \`boolean\` type, but the final value was: \`\\"\\"\`."`;

exports[`testCond "checkbox", false, '' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "checkbox", false, '' 4`] = `"false, this must be a \`boolean\` type, but the final value was: \`\\"\\"\`."`;

exports[`testCond "checkbox", false, '' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "checkbox", false, '' 6`] = `"false, this must be a \`boolean\` type, but the final value was: \`\\"\\"\`."`;

exports[`testCond "checkbox", false, '-8' 1`] = `"true, "`;

exports[`testCond "checkbox", false, '-8' 2`] = `"false, this must be a \`boolean\` type, but the final value was: \`\\"-8\\"\`."`;

exports[`testCond "checkbox", false, '-8' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "checkbox", false, '-8' 4`] = `"false, this must be a \`boolean\` type, but the final value was: \`\\"-8\\"\`."`;

exports[`testCond "checkbox", false, '-8' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "checkbox", false, '-8' 6`] = `"false, this must be a \`boolean\` type, but the final value was: \`\\"-8\\"\`."`;

exports[`testCond "checkbox", false, '8' 1`] = `"true, "`;

exports[`testCond "checkbox", false, '8' 2`] = `"false, this must be a \`boolean\` type, but the final value was: \`\\"8\\"\`."`;

exports[`testCond "checkbox", false, '8' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "checkbox", false, '8' 4`] = `"false, this must be a \`boolean\` type, but the final value was: \`\\"8\\"\`."`;

exports[`testCond "checkbox", false, '8' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "checkbox", false, '8' 6`] = `"false, this must be a \`boolean\` type, but the final value was: \`\\"8\\"\`."`;

exports[`testCond "checkbox", false, '123e4567-e89b-12d3-a456-426614174000' 1`] = `"true, "`;

exports[`testCond "checkbox", false, '123e4567-e89b-12d3-a456-426614174000' 2`] = `"false, this must be a \`boolean\` type, but the final value was: \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`."`;

exports[`testCond "checkbox", false, '123e4567-e89b-12d3-a456-426614174000' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "checkbox", false, '123e4567-e89b-12d3-a456-426614174000' 4`] = `"false, this must be a \`boolean\` type, but the final value was: \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`."`;

exports[`testCond "checkbox", false, '123e4567-e89b-12d3-a456-426614174000' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "checkbox", false, '123e4567-e89b-12d3-a456-426614174000' 6`] = `"false, this must be a \`boolean\` type, but the final value was: \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`."`;

exports[`testCond "checkbox", false, '2020-10-10T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "checkbox", false, '2020-10-10T10:10:00.000Z' 2`] = `"false, this must be a \`boolean\` type, but the final value was: \`\\"2020-10-10T10:10:00.000Z\\"\`."`;

exports[`testCond "checkbox", false, '2020-10-10T10:10:00.000Z' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "checkbox", false, '2020-10-10T10:10:00.000Z' 4`] = `"false, this must be a \`boolean\` type, but the final value was: \`\\"2020-10-10T10:10:00.000Z\\"\`."`;

exports[`testCond "checkbox", false, '2020-10-10T10:10:00.000Z' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "checkbox", false, '2020-10-10T10:10:00.000Z' 6`] = `"false, this must be a \`boolean\` type, but the final value was: \`\\"2020-10-10T10:10:00.000Z\\"\`."`;

exports[`testCond "checkbox", false, '9999-99-99T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "checkbox", false, '9999-99-99T10:10:00.000Z' 2`] = `"false, this must be a \`boolean\` type, but the final value was: \`\\"9999-99-99T10:10:00.000Z\\"\`."`;

exports[`testCond "checkbox", false, '9999-99-99T10:10:00.000Z' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "checkbox", false, '9999-99-99T10:10:00.000Z' 4`] = `"false, this must be a \`boolean\` type, but the final value was: \`\\"9999-99-99T10:10:00.000Z\\"\`."`;

exports[`testCond "checkbox", false, '9999-99-99T10:10:00.000Z' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "checkbox", false, '9999-99-99T10:10:00.000Z' 6`] = `"false, this must be a \`boolean\` type, but the final value was: \`\\"9999-99-99T10:10:00.000Z\\"\`."`;

exports[`testCond "checkbox", false, 'Carrie Mathison' 1`] = `"true, "`;

exports[`testCond "checkbox", false, 'Carrie Mathison' 2`] = `"false, this must be a \`boolean\` type, but the final value was: \`\\"Carrie Mathison\\"\`."`;

exports[`testCond "checkbox", false, 'Carrie Mathison' 3`] = `"false, this must be a \`boolean\` type, but the final value was: \`\\"Carrie Mathison\\"\`."`;

exports[`testCond "checkbox", false, 'Carrie Mathison' 4`] = `"false, this must not be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "checkbox", false, 'Carrie Mathison' 5`] = `"false, this must be a \`boolean\` type, but the final value was: \`\\"Carrie Mathison\\"\`."`;

exports[`testCond "checkbox", false, 'Carrie Mathison' 6`] = `"false, this must not be one of the following values: Carrie Mathison"`;

exports[`testCond "checkbox", false, 'false' 1`] = `"true, "`;

exports[`testCond "checkbox", false, 'false' 2`] = `"true, "`;

exports[`testCond "checkbox", false, 'false' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "checkbox", false, 'false' 4`] = `"true, "`;

exports[`testCond "checkbox", false, 'false' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "checkbox", false, 'false' 6`] = `"true, "`;

exports[`testCond "checkbox", false, 'true' 1`] = `"true, "`;

exports[`testCond "checkbox", false, 'true' 2`] = `"true, "`;

exports[`testCond "checkbox", false, 'true' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "checkbox", false, 'true' 4`] = `"true, "`;

exports[`testCond "checkbox", false, 'true' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "checkbox", false, 'true' 6`] = `"true, "`;

exports[`testCond "checkbox", false, -8 1`] = `"true, "`;

exports[`testCond "checkbox", false, -8 2`] = `"false, this must be a \`boolean\` type, but the final value was: \`-8\`."`;

exports[`testCond "checkbox", false, -8 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "checkbox", false, -8 4`] = `"false, this must be a \`boolean\` type, but the final value was: \`-8\`."`;

exports[`testCond "checkbox", false, -8 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "checkbox", false, -8 6`] = `"false, this must be a \`boolean\` type, but the final value was: \`-8\`."`;

exports[`testCond "checkbox", false, 0 1`] = `"true, "`;

exports[`testCond "checkbox", false, 0 2`] = `"true, "`;

exports[`testCond "checkbox", false, 0 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "checkbox", false, 0 4`] = `"true, "`;

exports[`testCond "checkbox", false, 0 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "checkbox", false, 0 6`] = `"true, "`;

exports[`testCond "checkbox", false, 8 1`] = `"true, "`;

exports[`testCond "checkbox", false, 8 2`] = `"false, this must be a \`boolean\` type, but the final value was: \`8\`."`;

exports[`testCond "checkbox", false, 8 3`] = `"false, this must be a \`boolean\` type, but the final value was: \`8\`."`;

exports[`testCond "checkbox", false, 8 4`] = `"false, this must not be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "checkbox", false, 8 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "checkbox", false, 8 6`] = `"false, this must be a \`boolean\` type, but the final value was: \`8\`."`;

exports[`testCond "checkbox", false, false 1`] = `"true, "`;

exports[`testCond "checkbox", false, false 2`] = `"true, "`;

exports[`testCond "checkbox", false, false 3`] = `"true, "`;

exports[`testCond "checkbox", false, false 4`] = `"false, this must not be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "checkbox", false, false 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "checkbox", false, false 6`] = `"true, "`;

exports[`testCond "checkbox", false, null 1`] = `"true, "`;

exports[`testCond "checkbox", false, null 2`] = `
"false, this must be a \`boolean\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", false, null 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "checkbox", false, null 4`] = `
"false, this must be a \`boolean\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", false, null 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "checkbox", false, null 6`] = `
"false, this must be a \`boolean\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", false, true 1`] = `"true, "`;

exports[`testCond "checkbox", false, true 2`] = `"true, "`;

exports[`testCond "checkbox", false, true 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "checkbox", false, true 4`] = `"true, "`;

exports[`testCond "checkbox", false, true 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "checkbox", false, true 6`] = `"true, "`;

exports[`testCond "checkbox", false, undefined 1`] = `"true, "`;

exports[`testCond "checkbox", false, undefined 2`] = `"false, this is a required field"`;

exports[`testCond "checkbox", false, undefined 3`] = `"true, "`;

exports[`testCond "checkbox", false, undefined 4`] = `"true, "`;

exports[`testCond "checkbox", false, undefined 5`] = `"true, "`;

exports[`testCond "checkbox", false, undefined 6`] = `"true, "`;

exports[`testCond "checkbox", true, '' 1`] = `"true, "`;

exports[`testCond "checkbox", true, '' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '-8' 1`] = `"true, "`;

exports[`testCond "checkbox", true, '-8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '-8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '-8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '-8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '-8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '8' 1`] = `"true, "`;

exports[`testCond "checkbox", true, '8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '123e4567-e89b-12d3-a456-426614174000' 1`] = `"true, "`;

exports[`testCond "checkbox", true, '123e4567-e89b-12d3-a456-426614174000' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '123e4567-e89b-12d3-a456-426614174000' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '123e4567-e89b-12d3-a456-426614174000' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '123e4567-e89b-12d3-a456-426614174000' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '123e4567-e89b-12d3-a456-426614174000' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '2020-10-10T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "checkbox", true, '2020-10-10T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '2020-10-10T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '2020-10-10T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '2020-10-10T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '2020-10-10T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '9999-99-99T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "checkbox", true, '9999-99-99T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '9999-99-99T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '9999-99-99T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '9999-99-99T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, '9999-99-99T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 'Carrie Mathison' 1`] = `"true, "`;

exports[`testCond "checkbox", true, 'Carrie Mathison' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 'Carrie Mathison' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 'Carrie Mathison' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 'Carrie Mathison' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 'Carrie Mathison' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 'false' 1`] = `"true, "`;

exports[`testCond "checkbox", true, 'false' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 'false' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 'false' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 'false' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 'false' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 'true' 1`] = `"true, "`;

exports[`testCond "checkbox", true, 'true' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 'true' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 'true' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 'true' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 'true' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, -8 1`] = `"true, "`;

exports[`testCond "checkbox", true, -8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, -8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, -8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, -8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, -8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 0 1`] = `"true, "`;

exports[`testCond "checkbox", true, 0 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 0 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 0 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 0 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 0 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 8 1`] = `"true, "`;

exports[`testCond "checkbox", true, 8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, 8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, false 1`] = `"true, "`;

exports[`testCond "checkbox", true, false 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, false 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, false 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, false 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, false 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, null 1`] = `"true, "`;

exports[`testCond "checkbox", true, null 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, null 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, null 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, null 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, null 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, true 1`] = `"true, "`;

exports[`testCond "checkbox", true, true 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, true 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, true 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, true 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, true 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "checkbox", true, undefined 1`] = `"true, "`;

exports[`testCond "checkbox", true, undefined 2`] = `"true, "`;

exports[`testCond "checkbox", true, undefined 3`] = `"true, "`;

exports[`testCond "checkbox", true, undefined 4`] = `"true, "`;

exports[`testCond "checkbox", true, undefined 5`] = `"true, "`;

exports[`testCond "checkbox", true, undefined 6`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, '' 1`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, '' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '-8' 1`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, '-8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '-8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '-8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '-8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '-8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '-8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '-8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '-8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '-8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '8' 1`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, '8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 1`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'Carrie Mathison' 1`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, 'Carrie Mathison' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'Carrie Mathison' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'Carrie Mathison' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'Carrie Mathison' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'Carrie Mathison' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'Carrie Mathison' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'Carrie Mathison' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'Carrie Mathison' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'Carrie Mathison' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'false' 1`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, 'false' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'false' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'false' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'false' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'false' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'false' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'false' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'false' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'false' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'true' 1`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, 'true' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'true' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'true' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'true' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'true' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'true' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'true' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'true' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 'true' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, -8 1`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, -8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, -8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, -8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, -8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, -8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, -8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, -8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, -8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, -8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 0 1`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, 0 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 0 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 0 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 0 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 0 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 0 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 0 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 0 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 0 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 8 1`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, 8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, 8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, false 1`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, false 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, false 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, false 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, false 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, false 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, false 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, false 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, false 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, false 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, null 1`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, null 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, null 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, null 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, null 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, null 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, null 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, null 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, null 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, null 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, true 1`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, true 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, true 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, true 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, true 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, true 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, true 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, true 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, true 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, true 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", {"max": 3, "min": 1}, undefined 1`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, undefined 2`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, undefined 3`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, undefined 4`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, undefined 5`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, undefined 6`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, undefined 7`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, undefined 8`] = `"true, "`;

exports[`testCond "date", {"max": 3, "min": 1}, undefined 9`] = `"true, "`;

exports[`testCond "date", false, '' 1`] = `"true, "`;

exports[`testCond "date", false, '' 2`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"\\"\`)."`;

exports[`testCond "date", false, '' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "date", false, '' 4`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"\\"\`)."`;

exports[`testCond "date", false, '' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "date", false, '' 6`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"\\"\`)."`;

exports[`testCond "date", false, '' 7`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"\\"\`)."`;

exports[`testCond "date", false, '' 8`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"\\"\`)."`;

exports[`testCond "date", false, '' 9`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"\\"\`)."`;

exports[`testCond "date", false, '' 10`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"\\"\`)."`;

exports[`testCond "date", false, '-8' 1`] = `"true, "`;

exports[`testCond "date", false, '-8' 2`] = `"true, "`;

exports[`testCond "date", false, '-8' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "date", false, '-8' 4`] = `"true, "`;

exports[`testCond "date", false, '-8' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "date", false, '-8' 6`] = `"true, "`;

exports[`testCond "date", false, '-8' 7`] = `"true, "`;

exports[`testCond "date", false, '-8' 8`] = `"true, "`;

exports[`testCond "date", false, '-8' 9`] = `"true, "`;

exports[`testCond "date", false, '8' 1`] = `"true, "`;

exports[`testCond "date", false, '8' 2`] = `"true, "`;

exports[`testCond "date", false, '8' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "date", false, '8' 4`] = `"true, "`;

exports[`testCond "date", false, '8' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "date", false, '8' 6`] = `"true, "`;

exports[`testCond "date", false, '8' 7`] = `"true, "`;

exports[`testCond "date", false, '8' 8`] = `"true, "`;

exports[`testCond "date", false, '8' 9`] = `"true, "`;

exports[`testCond "date", false, '123e4567-e89b-12d3-a456-426614174000' 1`] = `"true, "`;

exports[`testCond "date", false, '123e4567-e89b-12d3-a456-426614174000' 2`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`)."`;

exports[`testCond "date", false, '123e4567-e89b-12d3-a456-426614174000' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "date", false, '123e4567-e89b-12d3-a456-426614174000' 4`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`)."`;

exports[`testCond "date", false, '123e4567-e89b-12d3-a456-426614174000' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "date", false, '123e4567-e89b-12d3-a456-426614174000' 6`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`)."`;

exports[`testCond "date", false, '123e4567-e89b-12d3-a456-426614174000' 7`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`)."`;

exports[`testCond "date", false, '123e4567-e89b-12d3-a456-426614174000' 8`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`)."`;

exports[`testCond "date", false, '123e4567-e89b-12d3-a456-426614174000' 9`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`)."`;

exports[`testCond "date", false, '123e4567-e89b-12d3-a456-426614174000' 10`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`)."`;

exports[`testCond "date", false, '2020-10-10T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "date", false, '2020-10-10T10:10:00.000Z' 2`] = `"true, "`;

exports[`testCond "date", false, '2020-10-10T10:10:00.000Z' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "date", false, '2020-10-10T10:10:00.000Z' 4`] = `"true, "`;

exports[`testCond "date", false, '2020-10-10T10:10:00.000Z' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "date", false, '2020-10-10T10:10:00.000Z' 6`] = `"true, "`;

exports[`testCond "date", false, '2020-10-10T10:10:00.000Z' 7`] = `"true, "`;

exports[`testCond "date", false, '2020-10-10T10:10:00.000Z' 8`] = `"false, this field must be at earlier than 8"`;

exports[`testCond "date", false, '2020-10-10T10:10:00.000Z' 9`] = `"true, "`;

exports[`testCond "date", false, '9999-99-99T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "date", false, '9999-99-99T10:10:00.000Z' 2`] = `"true, "`;

exports[`testCond "date", false, '9999-99-99T10:10:00.000Z' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "date", false, '9999-99-99T10:10:00.000Z' 4`] = `"true, "`;

exports[`testCond "date", false, '9999-99-99T10:10:00.000Z' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "date", false, '9999-99-99T10:10:00.000Z' 6`] = `"true, "`;

exports[`testCond "date", false, '9999-99-99T10:10:00.000Z' 7`] = `"true, "`;

exports[`testCond "date", false, '9999-99-99T10:10:00.000Z' 8`] = `"false, this field must be at earlier than 8"`;

exports[`testCond "date", false, '9999-99-99T10:10:00.000Z' 9`] = `"true, "`;

exports[`testCond "date", false, 'Carrie Mathison' 1`] = `"true, "`;

exports[`testCond "date", false, 'Carrie Mathison' 2`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"Carrie Mathison\\"\`)."`;

exports[`testCond "date", false, 'Carrie Mathison' 3`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"Carrie Mathison\\"\`)."`;

exports[`testCond "date", false, 'Carrie Mathison' 4`] = `"false, this must not be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "date", false, 'Carrie Mathison' 5`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"Carrie Mathison\\"\`)."`;

exports[`testCond "date", false, 'Carrie Mathison' 6`] = `"false, this must not be one of the following values: Carrie Mathison"`;

exports[`testCond "date", false, 'Carrie Mathison' 7`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"Carrie Mathison\\"\`)."`;

exports[`testCond "date", false, 'Carrie Mathison' 8`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"Carrie Mathison\\"\`)."`;

exports[`testCond "date", false, 'Carrie Mathison' 9`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"Carrie Mathison\\"\`)."`;

exports[`testCond "date", false, 'Carrie Mathison' 10`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"Carrie Mathison\\"\`)."`;

exports[`testCond "date", false, 'false' 1`] = `"true, "`;

exports[`testCond "date", false, 'false' 2`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"false\\"\`)."`;

exports[`testCond "date", false, 'false' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "date", false, 'false' 4`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"false\\"\`)."`;

exports[`testCond "date", false, 'false' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "date", false, 'false' 6`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"false\\"\`)."`;

exports[`testCond "date", false, 'false' 7`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"false\\"\`)."`;

exports[`testCond "date", false, 'false' 8`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"false\\"\`)."`;

exports[`testCond "date", false, 'false' 9`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"false\\"\`)."`;

exports[`testCond "date", false, 'false' 10`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"false\\"\`)."`;

exports[`testCond "date", false, 'true' 1`] = `"true, "`;

exports[`testCond "date", false, 'true' 2`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"true\\"\`)."`;

exports[`testCond "date", false, 'true' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "date", false, 'true' 4`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"true\\"\`)."`;

exports[`testCond "date", false, 'true' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "date", false, 'true' 6`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"true\\"\`)."`;

exports[`testCond "date", false, 'true' 7`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"true\\"\`)."`;

exports[`testCond "date", false, 'true' 8`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"true\\"\`)."`;

exports[`testCond "date", false, 'true' 9`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"true\\"\`)."`;

exports[`testCond "date", false, 'true' 10`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`\\"true\\"\`)."`;

exports[`testCond "date", false, -8 1`] = `"true, "`;

exports[`testCond "date", false, -8 2`] = `"true, "`;

exports[`testCond "date", false, -8 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "date", false, -8 4`] = `"true, "`;

exports[`testCond "date", false, -8 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "date", false, -8 6`] = `"true, "`;

exports[`testCond "date", false, -8 7`] = `"true, "`;

exports[`testCond "date", false, -8 8`] = `"true, "`;

exports[`testCond "date", false, -8 9`] = `"true, "`;

exports[`testCond "date", false, 0 1`] = `"true, "`;

exports[`testCond "date", false, 0 2`] = `"true, "`;

exports[`testCond "date", false, 0 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "date", false, 0 4`] = `"true, "`;

exports[`testCond "date", false, 0 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "date", false, 0 6`] = `"true, "`;

exports[`testCond "date", false, 0 7`] = `"false, this field must be later than 4"`;

exports[`testCond "date", false, 0 8`] = `"false, this field must be later than 4"`;

exports[`testCond "date", false, 0 9`] = `"false, this field must be later than 8"`;

exports[`testCond "date", false, 0 10`] = `"true, "`;

exports[`testCond "date", false, 8 1`] = `"true, "`;

exports[`testCond "date", false, 8 2`] = `"true, "`;

exports[`testCond "date", false, 8 3`] = `"true, "`;

exports[`testCond "date", false, 8 4`] = `"false, this must not be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "date", false, 8 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "date", false, 8 6`] = `"true, "`;

exports[`testCond "date", false, 8 7`] = `"true, "`;

exports[`testCond "date", false, 8 8`] = `"true, "`;

exports[`testCond "date", false, 8 9`] = `"true, "`;

exports[`testCond "date", false, false 1`] = `"true, "`;

exports[`testCond "date", false, false 2`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`false\`)."`;

exports[`testCond "date", false, false 3`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`false\`)."`;

exports[`testCond "date", false, false 4`] = `"false, this must not be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "date", false, false 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "date", false, false 6`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`false\`)."`;

exports[`testCond "date", false, false 7`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`false\`)."`;

exports[`testCond "date", false, false 8`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`false\`)."`;

exports[`testCond "date", false, false 9`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`false\`)."`;

exports[`testCond "date", false, false 10`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`false\`)."`;

exports[`testCond "date", false, null 1`] = `"true, "`;

exports[`testCond "date", false, null 2`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\`."`;

exports[`testCond "date", false, null 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "date", false, null 4`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\`."`;

exports[`testCond "date", false, null 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "date", false, null 6`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\`."`;

exports[`testCond "date", false, null 7`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\`."`;

exports[`testCond "date", false, null 8`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\`."`;

exports[`testCond "date", false, null 9`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\`."`;

exports[`testCond "date", false, null 10`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\`."`;

exports[`testCond "date", false, true 1`] = `"true, "`;

exports[`testCond "date", false, true 2`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`true\`)."`;

exports[`testCond "date", false, true 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "date", false, true 4`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`true\`)."`;

exports[`testCond "date", false, true 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "date", false, true 6`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`true\`)."`;

exports[`testCond "date", false, true 7`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`true\`)."`;

exports[`testCond "date", false, true 8`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`true\`)."`;

exports[`testCond "date", false, true 9`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`true\`)."`;

exports[`testCond "date", false, true 10`] = `"false, this must be a \`date\` type, but the final value was: \`Invalid Date\` (cast from the value \`true\`)."`;

exports[`testCond "date", false, undefined 1`] = `"true, "`;

exports[`testCond "date", false, undefined 2`] = `"false, this is a required field"`;

exports[`testCond "date", false, undefined 3`] = `"true, "`;

exports[`testCond "date", false, undefined 4`] = `"true, "`;

exports[`testCond "date", false, undefined 5`] = `"true, "`;

exports[`testCond "date", false, undefined 6`] = `"true, "`;

exports[`testCond "date", false, undefined 7`] = `"true, "`;

exports[`testCond "date", false, undefined 8`] = `"true, "`;

exports[`testCond "date", false, undefined 9`] = `"true, "`;

exports[`testCond "date", true, '' 1`] = `"true, "`;

exports[`testCond "date", true, '' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '-8' 1`] = `"true, "`;

exports[`testCond "date", true, '-8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '-8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '-8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '-8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '-8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '-8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '-8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '-8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '-8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '8' 1`] = `"true, "`;

exports[`testCond "date", true, '8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '123e4567-e89b-12d3-a456-426614174000' 1`] = `"true, "`;

exports[`testCond "date", true, '123e4567-e89b-12d3-a456-426614174000' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '123e4567-e89b-12d3-a456-426614174000' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '123e4567-e89b-12d3-a456-426614174000' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '123e4567-e89b-12d3-a456-426614174000' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '123e4567-e89b-12d3-a456-426614174000' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '123e4567-e89b-12d3-a456-426614174000' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '123e4567-e89b-12d3-a456-426614174000' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '123e4567-e89b-12d3-a456-426614174000' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '123e4567-e89b-12d3-a456-426614174000' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '2020-10-10T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "date", true, '2020-10-10T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '2020-10-10T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '2020-10-10T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '2020-10-10T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '2020-10-10T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '2020-10-10T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '2020-10-10T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '2020-10-10T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '2020-10-10T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '9999-99-99T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "date", true, '9999-99-99T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '9999-99-99T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '9999-99-99T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '9999-99-99T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '9999-99-99T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '9999-99-99T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '9999-99-99T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '9999-99-99T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, '9999-99-99T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'Carrie Mathison' 1`] = `"true, "`;

exports[`testCond "date", true, 'Carrie Mathison' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'Carrie Mathison' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'Carrie Mathison' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'Carrie Mathison' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'Carrie Mathison' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'Carrie Mathison' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'Carrie Mathison' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'Carrie Mathison' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'Carrie Mathison' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'false' 1`] = `"true, "`;

exports[`testCond "date", true, 'false' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'false' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'false' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'false' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'false' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'false' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'false' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'false' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'false' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'true' 1`] = `"true, "`;

exports[`testCond "date", true, 'true' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'true' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'true' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'true' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'true' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'true' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'true' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'true' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 'true' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, -8 1`] = `"true, "`;

exports[`testCond "date", true, -8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, -8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, -8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, -8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, -8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, -8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, -8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, -8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, -8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 0 1`] = `"true, "`;

exports[`testCond "date", true, 0 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 0 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 0 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 0 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 0 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 0 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 0 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 0 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 0 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 8 1`] = `"true, "`;

exports[`testCond "date", true, 8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, 8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, false 1`] = `"true, "`;

exports[`testCond "date", true, false 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, false 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, false 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, false 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, false 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, false 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, false 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, false 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, false 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, null 1`] = `"true, "`;

exports[`testCond "date", true, null 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, null 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, null 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, null 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, null 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, null 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, null 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, null 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, null 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, true 1`] = `"true, "`;

exports[`testCond "date", true, true 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, true 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, true 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, true 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, true 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, true 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, true 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, true 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, true 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "date", true, undefined 1`] = `"true, "`;

exports[`testCond "date", true, undefined 2`] = `"true, "`;

exports[`testCond "date", true, undefined 3`] = `"true, "`;

exports[`testCond "date", true, undefined 4`] = `"true, "`;

exports[`testCond "date", true, undefined 5`] = `"true, "`;

exports[`testCond "date", true, undefined 6`] = `"true, "`;

exports[`testCond "date", true, undefined 7`] = `"true, "`;

exports[`testCond "date", true, undefined 8`] = `"true, "`;

exports[`testCond "date", true, undefined 9`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, '' 1`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, '' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '-8' 1`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, '-8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '-8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '-8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '-8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '-8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '-8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '-8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '-8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '-8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '8' 1`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, '8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 1`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'Carrie Mathison' 1`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, 'Carrie Mathison' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'Carrie Mathison' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'Carrie Mathison' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'Carrie Mathison' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'Carrie Mathison' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'Carrie Mathison' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'Carrie Mathison' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'Carrie Mathison' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'Carrie Mathison' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'false' 1`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, 'false' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'false' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'false' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'false' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'false' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'false' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'false' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'false' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'false' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'true' 1`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, 'true' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'true' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'true' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'true' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'true' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'true' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'true' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'true' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 'true' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, -8 1`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, -8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, -8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, -8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, -8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, -8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, -8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, -8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, -8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, -8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 0 1`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, 0 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 0 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 0 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 0 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 0 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 0 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 0 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 0 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 0 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 8 1`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, 8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, 8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, false 1`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, false 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, false 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, false 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, false 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, false 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, false 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, false 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, false 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, false 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, null 1`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, null 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, null 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, null 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, null 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, null 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, null 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, null 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, null 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, null 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, true 1`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, true 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, true 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, true 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, true 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, true 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, true 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, true 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, true 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, true 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", {"max": 3, "min": 1}, undefined 1`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, undefined 2`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, undefined 3`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, undefined 4`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, undefined 5`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, undefined 6`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, undefined 7`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, undefined 8`] = `"true, "`;

exports[`testCond "email", {"max": 3, "min": 1}, undefined 9`] = `"true, "`;

exports[`testCond "email", false, '' 1`] = `"true, "`;

exports[`testCond "email", false, '' 2`] = `"false, this is a required field"`;

exports[`testCond "email", false, '' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "email", false, '' 4`] = `"true, "`;

exports[`testCond "email", false, '' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "email", false, '' 6`] = `"true, "`;

exports[`testCond "email", false, '' 7`] = `"false, this must be at least 4 characters"`;

exports[`testCond "email", false, '' 8`] = `"false, this must be at least 4 characters"`;

exports[`testCond "email", false, '' 9`] = `"false, this must be at least 8 characters"`;

exports[`testCond "email", false, '' 10`] = `"true, "`;

exports[`testCond "email", false, '-8' 1`] = `"true, "`;

exports[`testCond "email", false, '-8' 2`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '-8' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "email", false, '-8' 4`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '-8' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "email", false, '-8' 6`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '-8' 7`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '-8' 8`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '-8' 9`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '-8' 10`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '8' 1`] = `"true, "`;

exports[`testCond "email", false, '8' 2`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '8' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "email", false, '8' 4`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '8' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "email", false, '8' 6`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '8' 7`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '8' 8`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '8' 9`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '8' 10`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '123e4567-e89b-12d3-a456-426614174000' 1`] = `"true, "`;

exports[`testCond "email", false, '123e4567-e89b-12d3-a456-426614174000' 2`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '123e4567-e89b-12d3-a456-426614174000' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "email", false, '123e4567-e89b-12d3-a456-426614174000' 4`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '123e4567-e89b-12d3-a456-426614174000' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "email", false, '123e4567-e89b-12d3-a456-426614174000' 6`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '123e4567-e89b-12d3-a456-426614174000' 7`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '123e4567-e89b-12d3-a456-426614174000' 8`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '123e4567-e89b-12d3-a456-426614174000' 9`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '123e4567-e89b-12d3-a456-426614174000' 10`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '2020-10-10T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "email", false, '2020-10-10T10:10:00.000Z' 2`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '2020-10-10T10:10:00.000Z' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "email", false, '2020-10-10T10:10:00.000Z' 4`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '2020-10-10T10:10:00.000Z' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "email", false, '2020-10-10T10:10:00.000Z' 6`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '2020-10-10T10:10:00.000Z' 7`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '2020-10-10T10:10:00.000Z' 8`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '2020-10-10T10:10:00.000Z' 9`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '2020-10-10T10:10:00.000Z' 10`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '9999-99-99T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "email", false, '9999-99-99T10:10:00.000Z' 2`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '9999-99-99T10:10:00.000Z' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "email", false, '9999-99-99T10:10:00.000Z' 4`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '9999-99-99T10:10:00.000Z' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "email", false, '9999-99-99T10:10:00.000Z' 6`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '9999-99-99T10:10:00.000Z' 7`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '9999-99-99T10:10:00.000Z' 8`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '9999-99-99T10:10:00.000Z' 9`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, '9999-99-99T10:10:00.000Z' 10`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 'Carrie Mathison' 1`] = `"true, "`;

exports[`testCond "email", false, 'Carrie Mathison' 2`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 'Carrie Mathison' 3`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 'Carrie Mathison' 4`] = `"false, this must not be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "email", false, 'Carrie Mathison' 5`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 'Carrie Mathison' 6`] = `"false, this must not be one of the following values: Carrie Mathison"`;

exports[`testCond "email", false, 'Carrie Mathison' 7`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 'Carrie Mathison' 8`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 'Carrie Mathison' 9`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 'Carrie Mathison' 10`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 'false' 1`] = `"true, "`;

exports[`testCond "email", false, 'false' 2`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 'false' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "email", false, 'false' 4`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 'false' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "email", false, 'false' 6`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 'false' 7`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 'false' 8`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 'false' 9`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 'false' 10`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 'true' 1`] = `"true, "`;

exports[`testCond "email", false, 'true' 2`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 'true' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "email", false, 'true' 4`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 'true' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "email", false, 'true' 6`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 'true' 7`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 'true' 8`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 'true' 9`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 'true' 10`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, -8 1`] = `"true, "`;

exports[`testCond "email", false, -8 2`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, -8 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "email", false, -8 4`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, -8 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "email", false, -8 6`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, -8 7`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, -8 8`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, -8 9`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, -8 10`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 0 1`] = `"true, "`;

exports[`testCond "email", false, 0 2`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 0 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "email", false, 0 4`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 0 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "email", false, 0 6`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 0 7`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 0 8`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 0 9`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 0 10`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 8 1`] = `"true, "`;

exports[`testCond "email", false, 8 2`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 8 3`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 8 4`] = `"false, this must not be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "email", false, 8 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "email", false, 8 6`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 8 7`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 8 8`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 8 9`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, 8 10`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, false 1`] = `"true, "`;

exports[`testCond "email", false, false 2`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, false 3`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, false 4`] = `"false, this must not be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "email", false, false 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "email", false, false 6`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, false 7`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, false 8`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, false 9`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, false 10`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, null 1`] = `"true, "`;

exports[`testCond "email", false, null 2`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", false, null 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "email", false, null 4`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", false, null 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "email", false, null 6`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", false, null 7`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", false, null 8`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", false, null 9`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", false, null 10`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", false, true 1`] = `"true, "`;

exports[`testCond "email", false, true 2`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, true 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "email", false, true 4`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, true 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "email", false, true 6`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, true 7`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, true 8`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, true 9`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, true 10`] = `"false, this must be a valid email"`;

exports[`testCond "email", false, undefined 1`] = `"true, "`;

exports[`testCond "email", false, undefined 2`] = `"false, this is a required field"`;

exports[`testCond "email", false, undefined 3`] = `"true, "`;

exports[`testCond "email", false, undefined 4`] = `"true, "`;

exports[`testCond "email", false, undefined 5`] = `"true, "`;

exports[`testCond "email", false, undefined 6`] = `"true, "`;

exports[`testCond "email", false, undefined 7`] = `"true, "`;

exports[`testCond "email", false, undefined 8`] = `"true, "`;

exports[`testCond "email", false, undefined 9`] = `"true, "`;

exports[`testCond "email", true, '' 1`] = `"true, "`;

exports[`testCond "email", true, '' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '-8' 1`] = `"true, "`;

exports[`testCond "email", true, '-8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '-8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '-8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '-8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '-8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '-8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '-8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '-8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '-8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '8' 1`] = `"true, "`;

exports[`testCond "email", true, '8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '123e4567-e89b-12d3-a456-426614174000' 1`] = `"true, "`;

exports[`testCond "email", true, '123e4567-e89b-12d3-a456-426614174000' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '123e4567-e89b-12d3-a456-426614174000' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '123e4567-e89b-12d3-a456-426614174000' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '123e4567-e89b-12d3-a456-426614174000' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '123e4567-e89b-12d3-a456-426614174000' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '123e4567-e89b-12d3-a456-426614174000' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '123e4567-e89b-12d3-a456-426614174000' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '123e4567-e89b-12d3-a456-426614174000' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '123e4567-e89b-12d3-a456-426614174000' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '2020-10-10T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "email", true, '2020-10-10T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '2020-10-10T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '2020-10-10T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '2020-10-10T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '2020-10-10T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '2020-10-10T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '2020-10-10T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '2020-10-10T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '2020-10-10T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '9999-99-99T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "email", true, '9999-99-99T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '9999-99-99T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '9999-99-99T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '9999-99-99T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '9999-99-99T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '9999-99-99T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '9999-99-99T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '9999-99-99T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, '9999-99-99T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'Carrie Mathison' 1`] = `"true, "`;

exports[`testCond "email", true, 'Carrie Mathison' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'Carrie Mathison' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'Carrie Mathison' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'Carrie Mathison' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'Carrie Mathison' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'Carrie Mathison' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'Carrie Mathison' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'Carrie Mathison' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'Carrie Mathison' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'false' 1`] = `"true, "`;

exports[`testCond "email", true, 'false' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'false' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'false' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'false' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'false' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'false' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'false' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'false' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'false' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'true' 1`] = `"true, "`;

exports[`testCond "email", true, 'true' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'true' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'true' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'true' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'true' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'true' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'true' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'true' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 'true' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, -8 1`] = `"true, "`;

exports[`testCond "email", true, -8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, -8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, -8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, -8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, -8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, -8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, -8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, -8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, -8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 0 1`] = `"true, "`;

exports[`testCond "email", true, 0 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 0 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 0 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 0 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 0 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 0 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 0 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 0 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 0 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 8 1`] = `"true, "`;

exports[`testCond "email", true, 8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, 8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, false 1`] = `"true, "`;

exports[`testCond "email", true, false 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, false 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, false 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, false 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, false 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, false 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, false 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, false 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, false 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, null 1`] = `"true, "`;

exports[`testCond "email", true, null 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, null 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, null 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, null 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, null 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, null 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, null 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, null 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, null 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, true 1`] = `"true, "`;

exports[`testCond "email", true, true 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, true 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, true 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, true 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, true 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, true 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, true 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, true 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, true 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "email", true, undefined 1`] = `"true, "`;

exports[`testCond "email", true, undefined 2`] = `"true, "`;

exports[`testCond "email", true, undefined 3`] = `"true, "`;

exports[`testCond "email", true, undefined 4`] = `"true, "`;

exports[`testCond "email", true, undefined 5`] = `"true, "`;

exports[`testCond "email", true, undefined 6`] = `"true, "`;

exports[`testCond "email", true, undefined 7`] = `"true, "`;

exports[`testCond "email", true, undefined 8`] = `"true, "`;

exports[`testCond "email", true, undefined 9`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, '' 1`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, '' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '' 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '' 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '' 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '-8' 1`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, '-8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '-8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '-8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '-8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '-8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '-8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '-8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '-8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '-8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '-8' 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '-8' 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '-8' 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '8' 1`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, '8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '8' 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '8' 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '8' 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 1`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'Carrie Mathison' 1`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, 'Carrie Mathison' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'Carrie Mathison' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'Carrie Mathison' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'Carrie Mathison' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'Carrie Mathison' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'Carrie Mathison' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'Carrie Mathison' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'Carrie Mathison' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'Carrie Mathison' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'Carrie Mathison' 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'Carrie Mathison' 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'Carrie Mathison' 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'false' 1`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, 'false' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'false' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'false' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'false' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'false' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'false' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'false' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'false' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'false' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'false' 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'false' 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'false' 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'true' 1`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, 'true' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'true' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'true' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'true' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'true' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'true' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'true' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'true' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'true' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'true' 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'true' 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 'true' 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, -8 1`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, -8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, -8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, -8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, -8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, -8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, -8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, -8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, -8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, -8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, -8 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, -8 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, -8 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 0 1`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, 0 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 0 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 0 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 0 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 0 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 0 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 0 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 0 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 0 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 0 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 0 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 0 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 8 1`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, 8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 8 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 8 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, 8 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, false 1`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, false 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, false 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, false 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, false 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, false 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, false 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, false 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, false 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, false 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, false 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, false 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, false 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, null 1`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, null 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, null 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, null 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, null 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, null 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, null 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, null 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, null 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, null 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, null 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, null 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, null 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, true 1`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, true 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, true 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, true 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, true 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, true 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, true 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, true 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, true 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, true 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, true 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, true 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, true 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", {"max": 3, "min": 1}, undefined 1`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, undefined 2`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, undefined 3`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, undefined 4`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, undefined 5`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, undefined 6`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, undefined 7`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, undefined 8`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, undefined 9`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, undefined 10`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, undefined 11`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, undefined 12`] = `"true, "`;

exports[`testCond "number", {"max": 3, "min": 1}, undefined 13`] = `"false, "`;

exports[`testCond "number", false, '' 1`] = `"true, "`;

exports[`testCond "number", false, '' 2`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"\\"\`)."`;

exports[`testCond "number", false, '' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "number", false, '' 4`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"\\"\`)."`;

exports[`testCond "number", false, '' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "number", false, '' 6`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"\\"\`)."`;

exports[`testCond "number", false, '' 7`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"\\"\`)."`;

exports[`testCond "number", false, '' 8`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"\\"\`)."`;

exports[`testCond "number", false, '' 9`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"\\"\`)."`;

exports[`testCond "number", false, '' 10`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"\\"\`)."`;

exports[`testCond "number", false, '' 11`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"\\"\`)."`;

exports[`testCond "number", false, '' 12`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"\\"\`)."`;

exports[`testCond "number", false, '' 13`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"\\"\`)."`;

exports[`testCond "number", false, '-8' 1`] = `"true, "`;

exports[`testCond "number", false, '-8' 2`] = `"true, "`;

exports[`testCond "number", false, '-8' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "number", false, '-8' 4`] = `"true, "`;

exports[`testCond "number", false, '-8' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "number", false, '-8' 6`] = `"true, "`;

exports[`testCond "number", false, '-8' 7`] = `"false, this must be greater than 4"`;

exports[`testCond "number", false, '-8' 8`] = `"false, this must be greater than 4"`;

exports[`testCond "number", false, '-8' 9`] = `"false, this must be greater than or equal to 4"`;

exports[`testCond "number", false, '-8' 10`] = `"false, this must be greater than or equal to 4"`;

exports[`testCond "number", false, '-8' 11`] = `"false, this must be greater than or equal to 8"`;

exports[`testCond "number", false, '-8' 12`] = `"true, this must be greater than or equal to 8"`;

exports[`testCond "number", false, '-8' 13`] = `"true, "`;

exports[`testCond "number", false, '8' 1`] = `"true, "`;

exports[`testCond "number", false, '8' 2`] = `"true, "`;

exports[`testCond "number", false, '8' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "number", false, '8' 4`] = `"true, "`;

exports[`testCond "number", false, '8' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "number", false, '8' 6`] = `"true, "`;

exports[`testCond "number", false, '8' 7`] = `"true, "`;

exports[`testCond "number", false, '8' 8`] = `"false, this must be less than 8"`;

exports[`testCond "number", false, '8' 9`] = `"true, "`;

exports[`testCond "number", false, '8' 10`] = `"true, "`;

exports[`testCond "number", false, '8' 11`] = `"true, "`;

exports[`testCond "number", false, '8' 12`] = `"true, "`;

exports[`testCond "number", false, '8' 13`] = `"false, "`;

exports[`testCond "number", false, '123e4567-e89b-12d3-a456-426614174000' 1`] = `"true, "`;

exports[`testCond "number", false, '123e4567-e89b-12d3-a456-426614174000' 2`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`)."`;

exports[`testCond "number", false, '123e4567-e89b-12d3-a456-426614174000' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "number", false, '123e4567-e89b-12d3-a456-426614174000' 4`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`)."`;

exports[`testCond "number", false, '123e4567-e89b-12d3-a456-426614174000' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "number", false, '123e4567-e89b-12d3-a456-426614174000' 6`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`)."`;

exports[`testCond "number", false, '123e4567-e89b-12d3-a456-426614174000' 7`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`)."`;

exports[`testCond "number", false, '123e4567-e89b-12d3-a456-426614174000' 8`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`)."`;

exports[`testCond "number", false, '123e4567-e89b-12d3-a456-426614174000' 9`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`)."`;

exports[`testCond "number", false, '123e4567-e89b-12d3-a456-426614174000' 10`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`)."`;

exports[`testCond "number", false, '123e4567-e89b-12d3-a456-426614174000' 11`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`)."`;

exports[`testCond "number", false, '123e4567-e89b-12d3-a456-426614174000' 12`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`)."`;

exports[`testCond "number", false, '123e4567-e89b-12d3-a456-426614174000' 13`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`)."`;

exports[`testCond "number", false, '2020-10-10T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "number", false, '2020-10-10T10:10:00.000Z' 2`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`)."`;

exports[`testCond "number", false, '2020-10-10T10:10:00.000Z' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "number", false, '2020-10-10T10:10:00.000Z' 4`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`)."`;

exports[`testCond "number", false, '2020-10-10T10:10:00.000Z' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "number", false, '2020-10-10T10:10:00.000Z' 6`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`)."`;

exports[`testCond "number", false, '2020-10-10T10:10:00.000Z' 7`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`)."`;

exports[`testCond "number", false, '2020-10-10T10:10:00.000Z' 8`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`)."`;

exports[`testCond "number", false, '2020-10-10T10:10:00.000Z' 9`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`)."`;

exports[`testCond "number", false, '2020-10-10T10:10:00.000Z' 10`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`)."`;

exports[`testCond "number", false, '2020-10-10T10:10:00.000Z' 11`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`)."`;

exports[`testCond "number", false, '2020-10-10T10:10:00.000Z' 12`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`)."`;

exports[`testCond "number", false, '2020-10-10T10:10:00.000Z' 13`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`)."`;

exports[`testCond "number", false, '9999-99-99T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "number", false, '9999-99-99T10:10:00.000Z' 2`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`)."`;

exports[`testCond "number", false, '9999-99-99T10:10:00.000Z' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "number", false, '9999-99-99T10:10:00.000Z' 4`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`)."`;

exports[`testCond "number", false, '9999-99-99T10:10:00.000Z' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "number", false, '9999-99-99T10:10:00.000Z' 6`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`)."`;

exports[`testCond "number", false, '9999-99-99T10:10:00.000Z' 7`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`)."`;

exports[`testCond "number", false, '9999-99-99T10:10:00.000Z' 8`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`)."`;

exports[`testCond "number", false, '9999-99-99T10:10:00.000Z' 9`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`)."`;

exports[`testCond "number", false, '9999-99-99T10:10:00.000Z' 10`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`)."`;

exports[`testCond "number", false, '9999-99-99T10:10:00.000Z' 11`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`)."`;

exports[`testCond "number", false, '9999-99-99T10:10:00.000Z' 12`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`)."`;

exports[`testCond "number", false, '9999-99-99T10:10:00.000Z' 13`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`)."`;

exports[`testCond "number", false, 'Carrie Mathison' 1`] = `"true, "`;

exports[`testCond "number", false, 'Carrie Mathison' 2`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"Carrie Mathison\\"\`)."`;

exports[`testCond "number", false, 'Carrie Mathison' 3`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"Carrie Mathison\\"\`)."`;

exports[`testCond "number", false, 'Carrie Mathison' 4`] = `"false, this must not be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "number", false, 'Carrie Mathison' 5`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"Carrie Mathison\\"\`)."`;

exports[`testCond "number", false, 'Carrie Mathison' 6`] = `"false, this must not be one of the following values: Carrie Mathison"`;

exports[`testCond "number", false, 'Carrie Mathison' 7`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"Carrie Mathison\\"\`)."`;

exports[`testCond "number", false, 'Carrie Mathison' 8`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"Carrie Mathison\\"\`)."`;

exports[`testCond "number", false, 'Carrie Mathison' 9`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"Carrie Mathison\\"\`)."`;

exports[`testCond "number", false, 'Carrie Mathison' 10`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"Carrie Mathison\\"\`)."`;

exports[`testCond "number", false, 'Carrie Mathison' 11`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"Carrie Mathison\\"\`)."`;

exports[`testCond "number", false, 'Carrie Mathison' 12`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"Carrie Mathison\\"\`)."`;

exports[`testCond "number", false, 'Carrie Mathison' 13`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"Carrie Mathison\\"\`)."`;

exports[`testCond "number", false, 'false' 1`] = `"true, "`;

exports[`testCond "number", false, 'false' 2`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"false\\"\`)."`;

exports[`testCond "number", false, 'false' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "number", false, 'false' 4`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"false\\"\`)."`;

exports[`testCond "number", false, 'false' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "number", false, 'false' 6`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"false\\"\`)."`;

exports[`testCond "number", false, 'false' 7`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"false\\"\`)."`;

exports[`testCond "number", false, 'false' 8`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"false\\"\`)."`;

exports[`testCond "number", false, 'false' 9`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"false\\"\`)."`;

exports[`testCond "number", false, 'false' 10`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"false\\"\`)."`;

exports[`testCond "number", false, 'false' 11`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"false\\"\`)."`;

exports[`testCond "number", false, 'false' 12`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"false\\"\`)."`;

exports[`testCond "number", false, 'false' 13`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"false\\"\`)."`;

exports[`testCond "number", false, 'true' 1`] = `"true, "`;

exports[`testCond "number", false, 'true' 2`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"true\\"\`)."`;

exports[`testCond "number", false, 'true' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "number", false, 'true' 4`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"true\\"\`)."`;

exports[`testCond "number", false, 'true' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "number", false, 'true' 6`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"true\\"\`)."`;

exports[`testCond "number", false, 'true' 7`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"true\\"\`)."`;

exports[`testCond "number", false, 'true' 8`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"true\\"\`)."`;

exports[`testCond "number", false, 'true' 9`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"true\\"\`)."`;

exports[`testCond "number", false, 'true' 10`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"true\\"\`)."`;

exports[`testCond "number", false, 'true' 11`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"true\\"\`)."`;

exports[`testCond "number", false, 'true' 12`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"true\\"\`)."`;

exports[`testCond "number", false, 'true' 13`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`\\"true\\"\`)."`;

exports[`testCond "number", false, -8 1`] = `"true, "`;

exports[`testCond "number", false, -8 2`] = `"true, "`;

exports[`testCond "number", false, -8 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "number", false, -8 4`] = `"true, "`;

exports[`testCond "number", false, -8 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "number", false, -8 6`] = `"true, "`;

exports[`testCond "number", false, -8 7`] = `"false, this must be greater than 4"`;

exports[`testCond "number", false, -8 8`] = `"false, this must be greater than 4"`;

exports[`testCond "number", false, -8 9`] = `"false, this must be greater than or equal to 4"`;

exports[`testCond "number", false, -8 10`] = `"false, this must be greater than or equal to 4"`;

exports[`testCond "number", false, -8 11`] = `"false, this must be greater than or equal to 8"`;

exports[`testCond "number", false, -8 12`] = `"true, this must be greater than or equal to 8"`;

exports[`testCond "number", false, -8 13`] = `"true, "`;

exports[`testCond "number", false, 0 1`] = `"true, "`;

exports[`testCond "number", false, 0 2`] = `"true, "`;

exports[`testCond "number", false, 0 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "number", false, 0 4`] = `"true, "`;

exports[`testCond "number", false, 0 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "number", false, 0 6`] = `"true, "`;

exports[`testCond "number", false, 0 7`] = `"false, this must be greater than 4"`;

exports[`testCond "number", false, 0 8`] = `"false, this must be greater than 4"`;

exports[`testCond "number", false, 0 9`] = `"false, this must be greater than or equal to 4"`;

exports[`testCond "number", false, 0 10`] = `"false, this must be greater than or equal to 4"`;

exports[`testCond "number", false, 0 11`] = `"false, this must be greater than or equal to 8"`;

exports[`testCond "number", false, 0 12`] = `"true, this must be greater than or equal to 8"`;

exports[`testCond "number", false, 0 13`] = `"true, "`;

exports[`testCond "number", false, 8 1`] = `"true, "`;

exports[`testCond "number", false, 8 2`] = `"true, "`;

exports[`testCond "number", false, 8 3`] = `"true, "`;

exports[`testCond "number", false, 8 4`] = `"false, this must not be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "number", false, 8 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "number", false, 8 6`] = `"true, "`;

exports[`testCond "number", false, 8 7`] = `"true, "`;

exports[`testCond "number", false, 8 8`] = `"false, this must be less than 8"`;

exports[`testCond "number", false, 8 9`] = `"true, "`;

exports[`testCond "number", false, 8 10`] = `"true, "`;

exports[`testCond "number", false, 8 11`] = `"true, "`;

exports[`testCond "number", false, 8 12`] = `"true, "`;

exports[`testCond "number", false, 8 13`] = `"false, "`;

exports[`testCond "number", false, false 1`] = `"true, "`;

exports[`testCond "number", false, false 2`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`false\`)."`;

exports[`testCond "number", false, false 3`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`false\`)."`;

exports[`testCond "number", false, false 4`] = `"false, this must not be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "number", false, false 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "number", false, false 6`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`false\`)."`;

exports[`testCond "number", false, false 7`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`false\`)."`;

exports[`testCond "number", false, false 8`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`false\`)."`;

exports[`testCond "number", false, false 9`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`false\`)."`;

exports[`testCond "number", false, false 10`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`false\`)."`;

exports[`testCond "number", false, false 11`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`false\`)."`;

exports[`testCond "number", false, false 12`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`false\`)."`;

exports[`testCond "number", false, false 13`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`false\`)."`;

exports[`testCond "number", false, null 1`] = `"true, "`;

exports[`testCond "number", false, null 2`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\`."`;

exports[`testCond "number", false, null 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "number", false, null 4`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\`."`;

exports[`testCond "number", false, null 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "number", false, null 6`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\`."`;

exports[`testCond "number", false, null 7`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\`."`;

exports[`testCond "number", false, null 8`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\`."`;

exports[`testCond "number", false, null 9`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\`."`;

exports[`testCond "number", false, null 10`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\`."`;

exports[`testCond "number", false, null 11`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\`."`;

exports[`testCond "number", false, null 12`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\`."`;

exports[`testCond "number", false, null 13`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\`."`;

exports[`testCond "number", false, true 1`] = `"true, "`;

exports[`testCond "number", false, true 2`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`true\`)."`;

exports[`testCond "number", false, true 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "number", false, true 4`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`true\`)."`;

exports[`testCond "number", false, true 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "number", false, true 6`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`true\`)."`;

exports[`testCond "number", false, true 7`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`true\`)."`;

exports[`testCond "number", false, true 8`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`true\`)."`;

exports[`testCond "number", false, true 9`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`true\`)."`;

exports[`testCond "number", false, true 10`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`true\`)."`;

exports[`testCond "number", false, true 11`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`true\`)."`;

exports[`testCond "number", false, true 12`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`true\`)."`;

exports[`testCond "number", false, true 13`] = `"false, this must be a \`number\` type, but the final value was: \`NaN\` (cast from the value \`true\`)."`;

exports[`testCond "number", false, undefined 1`] = `"true, "`;

exports[`testCond "number", false, undefined 2`] = `"false, this is a required field"`;

exports[`testCond "number", false, undefined 3`] = `"true, "`;

exports[`testCond "number", false, undefined 4`] = `"true, "`;

exports[`testCond "number", false, undefined 5`] = `"true, "`;

exports[`testCond "number", false, undefined 6`] = `"true, "`;

exports[`testCond "number", false, undefined 7`] = `"true, "`;

exports[`testCond "number", false, undefined 8`] = `"true, "`;

exports[`testCond "number", false, undefined 9`] = `"true, "`;

exports[`testCond "number", false, undefined 10`] = `"true, "`;

exports[`testCond "number", false, undefined 11`] = `"true, "`;

exports[`testCond "number", false, undefined 12`] = `"true, "`;

exports[`testCond "number", false, undefined 13`] = `"false, "`;

exports[`testCond "number", true, '' 1`] = `"true, "`;

exports[`testCond "number", true, '' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '' 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '' 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '' 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '-8' 1`] = `"true, "`;

exports[`testCond "number", true, '-8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '-8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '-8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '-8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '-8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '-8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '-8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '-8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '-8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '-8' 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '-8' 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '-8' 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '8' 1`] = `"true, "`;

exports[`testCond "number", true, '8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '8' 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '8' 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '8' 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '123e4567-e89b-12d3-a456-426614174000' 1`] = `"true, "`;

exports[`testCond "number", true, '123e4567-e89b-12d3-a456-426614174000' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '123e4567-e89b-12d3-a456-426614174000' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '123e4567-e89b-12d3-a456-426614174000' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '123e4567-e89b-12d3-a456-426614174000' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '123e4567-e89b-12d3-a456-426614174000' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '123e4567-e89b-12d3-a456-426614174000' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '123e4567-e89b-12d3-a456-426614174000' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '123e4567-e89b-12d3-a456-426614174000' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '123e4567-e89b-12d3-a456-426614174000' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '123e4567-e89b-12d3-a456-426614174000' 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '123e4567-e89b-12d3-a456-426614174000' 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '123e4567-e89b-12d3-a456-426614174000' 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '2020-10-10T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "number", true, '2020-10-10T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '2020-10-10T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '2020-10-10T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '2020-10-10T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '2020-10-10T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '2020-10-10T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '2020-10-10T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '2020-10-10T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '2020-10-10T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '2020-10-10T10:10:00.000Z' 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '2020-10-10T10:10:00.000Z' 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '2020-10-10T10:10:00.000Z' 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '9999-99-99T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "number", true, '9999-99-99T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '9999-99-99T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '9999-99-99T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '9999-99-99T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '9999-99-99T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '9999-99-99T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '9999-99-99T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '9999-99-99T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '9999-99-99T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '9999-99-99T10:10:00.000Z' 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '9999-99-99T10:10:00.000Z' 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, '9999-99-99T10:10:00.000Z' 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'Carrie Mathison' 1`] = `"true, "`;

exports[`testCond "number", true, 'Carrie Mathison' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'Carrie Mathison' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'Carrie Mathison' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'Carrie Mathison' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'Carrie Mathison' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'Carrie Mathison' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'Carrie Mathison' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'Carrie Mathison' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'Carrie Mathison' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'Carrie Mathison' 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'Carrie Mathison' 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'Carrie Mathison' 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'false' 1`] = `"true, "`;

exports[`testCond "number", true, 'false' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'false' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'false' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'false' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'false' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'false' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'false' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'false' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'false' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'false' 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'false' 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'false' 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'true' 1`] = `"true, "`;

exports[`testCond "number", true, 'true' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'true' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'true' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'true' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'true' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'true' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'true' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'true' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'true' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'true' 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'true' 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 'true' 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, -8 1`] = `"true, "`;

exports[`testCond "number", true, -8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, -8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, -8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, -8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, -8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, -8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, -8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, -8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, -8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, -8 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, -8 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, -8 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 0 1`] = `"true, "`;

exports[`testCond "number", true, 0 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 0 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 0 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 0 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 0 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 0 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 0 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 0 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 0 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 0 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 0 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 0 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 8 1`] = `"true, "`;

exports[`testCond "number", true, 8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 8 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 8 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, 8 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, false 1`] = `"true, "`;

exports[`testCond "number", true, false 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, false 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, false 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, false 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, false 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, false 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, false 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, false 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, false 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, false 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, false 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, false 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, null 1`] = `"true, "`;

exports[`testCond "number", true, null 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, null 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, null 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, null 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, null 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, null 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, null 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, null 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, null 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, null 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, null 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, null 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, true 1`] = `"true, "`;

exports[`testCond "number", true, true 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, true 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, true 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, true 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, true 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, true 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, true 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, true 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, true 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, true 11`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, true 12`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, true 13`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "number", true, undefined 1`] = `"true, "`;

exports[`testCond "number", true, undefined 2`] = `"true, "`;

exports[`testCond "number", true, undefined 3`] = `"true, "`;

exports[`testCond "number", true, undefined 4`] = `"true, "`;

exports[`testCond "number", true, undefined 5`] = `"true, "`;

exports[`testCond "number", true, undefined 6`] = `"true, "`;

exports[`testCond "number", true, undefined 7`] = `"true, "`;

exports[`testCond "number", true, undefined 8`] = `"true, "`;

exports[`testCond "number", true, undefined 9`] = `"true, "`;

exports[`testCond "number", true, undefined 10`] = `"true, "`;

exports[`testCond "number", true, undefined 11`] = `"true, "`;

exports[`testCond "number", true, undefined 12`] = `"true, "`;

exports[`testCond "number", true, undefined 13`] = `"false, "`;

exports[`testCond "text", {"max": 3, "min": 1}, '' 1`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, '' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '-8' 1`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, '-8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '-8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '-8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '-8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '-8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '-8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '-8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '-8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '-8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '8' 1`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, '8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 1`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'Carrie Mathison' 1`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, 'Carrie Mathison' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'Carrie Mathison' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'Carrie Mathison' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'Carrie Mathison' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'Carrie Mathison' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'Carrie Mathison' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'Carrie Mathison' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'Carrie Mathison' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'Carrie Mathison' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'false' 1`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, 'false' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'false' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'false' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'false' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'false' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'false' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'false' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'false' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'false' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'true' 1`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, 'true' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'true' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'true' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'true' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'true' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'true' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'true' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'true' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 'true' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, -8 1`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, -8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, -8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, -8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, -8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, -8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, -8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, -8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, -8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, -8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 0 1`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, 0 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 0 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 0 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 0 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 0 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 0 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 0 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 0 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 0 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 8 1`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, 8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, 8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, false 1`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, false 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, false 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, false 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, false 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, false 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, false 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, false 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, false 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, false 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, null 1`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, null 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, null 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, null 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, null 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, null 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, null 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, null 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, null 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, null 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, true 1`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, true 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, true 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, true 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, true 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, true 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, true 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, true 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, true 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, true 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", {"max": 3, "min": 1}, undefined 1`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, undefined 2`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, undefined 3`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, undefined 4`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, undefined 5`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, undefined 6`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, undefined 7`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, undefined 8`] = `"true, "`;

exports[`testCond "text", {"max": 3, "min": 1}, undefined 9`] = `"true, "`;

exports[`testCond "text", false, '' 1`] = `"true, "`;

exports[`testCond "text", false, '' 2`] = `"false, this is a required field"`;

exports[`testCond "text", false, '' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "text", false, '' 4`] = `"true, "`;

exports[`testCond "text", false, '' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "text", false, '' 6`] = `"true, "`;

exports[`testCond "text", false, '' 7`] = `"false, this must be at least 4 characters"`;

exports[`testCond "text", false, '' 8`] = `"false, this must be at least 4 characters"`;

exports[`testCond "text", false, '' 9`] = `"false, this must be at least 8 characters"`;

exports[`testCond "text", false, '' 10`] = `"true, "`;

exports[`testCond "text", false, '-8' 1`] = `"true, "`;

exports[`testCond "text", false, '-8' 2`] = `"true, "`;

exports[`testCond "text", false, '-8' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "text", false, '-8' 4`] = `"true, "`;

exports[`testCond "text", false, '-8' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "text", false, '-8' 6`] = `"true, "`;

exports[`testCond "text", false, '-8' 7`] = `"false, this must be at least 4 characters"`;

exports[`testCond "text", false, '-8' 8`] = `"false, this must be at least 4 characters"`;

exports[`testCond "text", false, '-8' 9`] = `"false, this must be at least 8 characters"`;

exports[`testCond "text", false, '-8' 10`] = `"true, "`;

exports[`testCond "text", false, '8' 1`] = `"true, "`;

exports[`testCond "text", false, '8' 2`] = `"true, "`;

exports[`testCond "text", false, '8' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "text", false, '8' 4`] = `"true, "`;

exports[`testCond "text", false, '8' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "text", false, '8' 6`] = `"true, "`;

exports[`testCond "text", false, '8' 7`] = `"false, this must be at least 4 characters"`;

exports[`testCond "text", false, '8' 8`] = `"false, this must be at least 4 characters"`;

exports[`testCond "text", false, '8' 9`] = `"false, this must be at least 8 characters"`;

exports[`testCond "text", false, '8' 10`] = `"true, "`;

exports[`testCond "text", false, '123e4567-e89b-12d3-a456-426614174000' 1`] = `"true, "`;

exports[`testCond "text", false, '123e4567-e89b-12d3-a456-426614174000' 2`] = `"true, "`;

exports[`testCond "text", false, '123e4567-e89b-12d3-a456-426614174000' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "text", false, '123e4567-e89b-12d3-a456-426614174000' 4`] = `"true, "`;

exports[`testCond "text", false, '123e4567-e89b-12d3-a456-426614174000' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "text", false, '123e4567-e89b-12d3-a456-426614174000' 6`] = `"true, "`;

exports[`testCond "text", false, '123e4567-e89b-12d3-a456-426614174000' 7`] = `"true, "`;

exports[`testCond "text", false, '123e4567-e89b-12d3-a456-426614174000' 8`] = `"false, this must be at most 8 characters"`;

exports[`testCond "text", false, '123e4567-e89b-12d3-a456-426614174000' 9`] = `"true, "`;

exports[`testCond "text", false, '2020-10-10T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "text", false, '2020-10-10T10:10:00.000Z' 2`] = `"true, "`;

exports[`testCond "text", false, '2020-10-10T10:10:00.000Z' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "text", false, '2020-10-10T10:10:00.000Z' 4`] = `"true, "`;

exports[`testCond "text", false, '2020-10-10T10:10:00.000Z' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "text", false, '2020-10-10T10:10:00.000Z' 6`] = `"true, "`;

exports[`testCond "text", false, '2020-10-10T10:10:00.000Z' 7`] = `"true, "`;

exports[`testCond "text", false, '2020-10-10T10:10:00.000Z' 8`] = `"false, this must be at most 8 characters"`;

exports[`testCond "text", false, '2020-10-10T10:10:00.000Z' 9`] = `"true, "`;

exports[`testCond "text", false, '9999-99-99T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "text", false, '9999-99-99T10:10:00.000Z' 2`] = `"true, "`;

exports[`testCond "text", false, '9999-99-99T10:10:00.000Z' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "text", false, '9999-99-99T10:10:00.000Z' 4`] = `"true, "`;

exports[`testCond "text", false, '9999-99-99T10:10:00.000Z' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "text", false, '9999-99-99T10:10:00.000Z' 6`] = `"true, "`;

exports[`testCond "text", false, '9999-99-99T10:10:00.000Z' 7`] = `"true, "`;

exports[`testCond "text", false, '9999-99-99T10:10:00.000Z' 8`] = `"false, this must be at most 8 characters"`;

exports[`testCond "text", false, '9999-99-99T10:10:00.000Z' 9`] = `"true, "`;

exports[`testCond "text", false, 'Carrie Mathison' 1`] = `"true, "`;

exports[`testCond "text", false, 'Carrie Mathison' 2`] = `"true, "`;

exports[`testCond "text", false, 'Carrie Mathison' 3`] = `"true, "`;

exports[`testCond "text", false, 'Carrie Mathison' 4`] = `"false, this must not be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "text", false, 'Carrie Mathison' 5`] = `"true, "`;

exports[`testCond "text", false, 'Carrie Mathison' 6`] = `"false, this must not be one of the following values: Carrie Mathison"`;

exports[`testCond "text", false, 'Carrie Mathison' 7`] = `"true, "`;

exports[`testCond "text", false, 'Carrie Mathison' 8`] = `"false, this must be at most 8 characters"`;

exports[`testCond "text", false, 'Carrie Mathison' 9`] = `"true, "`;

exports[`testCond "text", false, 'false' 1`] = `"true, "`;

exports[`testCond "text", false, 'false' 2`] = `"true, "`;

exports[`testCond "text", false, 'false' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "text", false, 'false' 4`] = `"true, "`;

exports[`testCond "text", false, 'false' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "text", false, 'false' 6`] = `"true, "`;

exports[`testCond "text", false, 'false' 7`] = `"true, "`;

exports[`testCond "text", false, 'false' 8`] = `"true, "`;

exports[`testCond "text", false, 'false' 9`] = `"false, this must be at least 8 characters"`;

exports[`testCond "text", false, 'false' 10`] = `"true, "`;

exports[`testCond "text", false, 'true' 1`] = `"true, "`;

exports[`testCond "text", false, 'true' 2`] = `"true, "`;

exports[`testCond "text", false, 'true' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "text", false, 'true' 4`] = `"true, "`;

exports[`testCond "text", false, 'true' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "text", false, 'true' 6`] = `"true, "`;

exports[`testCond "text", false, 'true' 7`] = `"true, "`;

exports[`testCond "text", false, 'true' 8`] = `"true, "`;

exports[`testCond "text", false, 'true' 9`] = `"false, this must be at least 8 characters"`;

exports[`testCond "text", false, 'true' 10`] = `"true, "`;

exports[`testCond "text", false, -8 1`] = `"true, "`;

exports[`testCond "text", false, -8 2`] = `"true, "`;

exports[`testCond "text", false, -8 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "text", false, -8 4`] = `"true, "`;

exports[`testCond "text", false, -8 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "text", false, -8 6`] = `"true, "`;

exports[`testCond "text", false, -8 7`] = `"false, this must be at least 4 characters"`;

exports[`testCond "text", false, -8 8`] = `"false, this must be at least 4 characters"`;

exports[`testCond "text", false, -8 9`] = `"false, this must be at least 8 characters"`;

exports[`testCond "text", false, -8 10`] = `"true, "`;

exports[`testCond "text", false, 0 1`] = `"true, "`;

exports[`testCond "text", false, 0 2`] = `"true, "`;

exports[`testCond "text", false, 0 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "text", false, 0 4`] = `"true, "`;

exports[`testCond "text", false, 0 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "text", false, 0 6`] = `"true, "`;

exports[`testCond "text", false, 0 7`] = `"false, this must be at least 4 characters"`;

exports[`testCond "text", false, 0 8`] = `"false, this must be at least 4 characters"`;

exports[`testCond "text", false, 0 9`] = `"false, this must be at least 8 characters"`;

exports[`testCond "text", false, 0 10`] = `"true, "`;

exports[`testCond "text", false, 8 1`] = `"true, "`;

exports[`testCond "text", false, 8 2`] = `"true, "`;

exports[`testCond "text", false, 8 3`] = `"true, "`;

exports[`testCond "text", false, 8 4`] = `"false, this must not be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "text", false, 8 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "text", false, 8 6`] = `"true, "`;

exports[`testCond "text", false, 8 7`] = `"false, this must be at least 4 characters"`;

exports[`testCond "text", false, 8 8`] = `"false, this must be at least 4 characters"`;

exports[`testCond "text", false, 8 9`] = `"false, this must be at least 8 characters"`;

exports[`testCond "text", false, 8 10`] = `"true, "`;

exports[`testCond "text", false, false 1`] = `"true, "`;

exports[`testCond "text", false, false 2`] = `"true, "`;

exports[`testCond "text", false, false 3`] = `"true, "`;

exports[`testCond "text", false, false 4`] = `"false, this must not be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "text", false, false 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "text", false, false 6`] = `"true, "`;

exports[`testCond "text", false, false 7`] = `"true, "`;

exports[`testCond "text", false, false 8`] = `"true, "`;

exports[`testCond "text", false, false 9`] = `"false, this must be at least 8 characters"`;

exports[`testCond "text", false, false 10`] = `"true, "`;

exports[`testCond "text", false, null 1`] = `"true, "`;

exports[`testCond "text", false, null 2`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", false, null 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "text", false, null 4`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", false, null 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "text", false, null 6`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", false, null 7`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", false, null 8`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", false, null 9`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", false, null 10`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", false, true 1`] = `"true, "`;

exports[`testCond "text", false, true 2`] = `"true, "`;

exports[`testCond "text", false, true 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "text", false, true 4`] = `"true, "`;

exports[`testCond "text", false, true 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "text", false, true 6`] = `"true, "`;

exports[`testCond "text", false, true 7`] = `"true, "`;

exports[`testCond "text", false, true 8`] = `"true, "`;

exports[`testCond "text", false, true 9`] = `"false, this must be at least 8 characters"`;

exports[`testCond "text", false, true 10`] = `"true, "`;

exports[`testCond "text", false, undefined 1`] = `"true, "`;

exports[`testCond "text", false, undefined 2`] = `"false, this is a required field"`;

exports[`testCond "text", false, undefined 3`] = `"true, "`;

exports[`testCond "text", false, undefined 4`] = `"true, "`;

exports[`testCond "text", false, undefined 5`] = `"true, "`;

exports[`testCond "text", false, undefined 6`] = `"true, "`;

exports[`testCond "text", false, undefined 7`] = `"true, "`;

exports[`testCond "text", false, undefined 8`] = `"true, "`;

exports[`testCond "text", false, undefined 9`] = `"true, "`;

exports[`testCond "text", true, '' 1`] = `"true, "`;

exports[`testCond "text", true, '' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '-8' 1`] = `"true, "`;

exports[`testCond "text", true, '-8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '-8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '-8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '-8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '-8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '-8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '-8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '-8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '-8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '8' 1`] = `"true, "`;

exports[`testCond "text", true, '8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '123e4567-e89b-12d3-a456-426614174000' 1`] = `"true, "`;

exports[`testCond "text", true, '123e4567-e89b-12d3-a456-426614174000' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '123e4567-e89b-12d3-a456-426614174000' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '123e4567-e89b-12d3-a456-426614174000' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '123e4567-e89b-12d3-a456-426614174000' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '123e4567-e89b-12d3-a456-426614174000' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '123e4567-e89b-12d3-a456-426614174000' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '123e4567-e89b-12d3-a456-426614174000' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '123e4567-e89b-12d3-a456-426614174000' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '123e4567-e89b-12d3-a456-426614174000' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '2020-10-10T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "text", true, '2020-10-10T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '2020-10-10T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '2020-10-10T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '2020-10-10T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '2020-10-10T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '2020-10-10T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '2020-10-10T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '2020-10-10T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '2020-10-10T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '9999-99-99T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "text", true, '9999-99-99T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '9999-99-99T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '9999-99-99T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '9999-99-99T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '9999-99-99T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '9999-99-99T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '9999-99-99T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '9999-99-99T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, '9999-99-99T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'Carrie Mathison' 1`] = `"true, "`;

exports[`testCond "text", true, 'Carrie Mathison' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'Carrie Mathison' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'Carrie Mathison' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'Carrie Mathison' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'Carrie Mathison' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'Carrie Mathison' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'Carrie Mathison' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'Carrie Mathison' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'Carrie Mathison' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'false' 1`] = `"true, "`;

exports[`testCond "text", true, 'false' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'false' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'false' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'false' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'false' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'false' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'false' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'false' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'false' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'true' 1`] = `"true, "`;

exports[`testCond "text", true, 'true' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'true' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'true' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'true' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'true' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'true' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'true' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'true' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 'true' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, -8 1`] = `"true, "`;

exports[`testCond "text", true, -8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, -8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, -8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, -8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, -8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, -8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, -8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, -8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, -8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 0 1`] = `"true, "`;

exports[`testCond "text", true, 0 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 0 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 0 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 0 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 0 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 0 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 0 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 0 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 0 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 8 1`] = `"true, "`;

exports[`testCond "text", true, 8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, 8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, false 1`] = `"true, "`;

exports[`testCond "text", true, false 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, false 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, false 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, false 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, false 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, false 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, false 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, false 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, false 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, null 1`] = `"true, "`;

exports[`testCond "text", true, null 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, null 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, null 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, null 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, null 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, null 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, null 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, null 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, null 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, true 1`] = `"true, "`;

exports[`testCond "text", true, true 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, true 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, true 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, true 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, true 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, true 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, true 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, true 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, true 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "text", true, undefined 1`] = `"true, "`;

exports[`testCond "text", true, undefined 2`] = `"true, "`;

exports[`testCond "text", true, undefined 3`] = `"true, "`;

exports[`testCond "text", true, undefined 4`] = `"true, "`;

exports[`testCond "text", true, undefined 5`] = `"true, "`;

exports[`testCond "text", true, undefined 6`] = `"true, "`;

exports[`testCond "text", true, undefined 7`] = `"true, "`;

exports[`testCond "text", true, undefined 8`] = `"true, "`;

exports[`testCond "text", true, undefined 9`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, '' 1`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, '' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '-8' 1`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, '-8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '-8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '-8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '-8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '-8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '-8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '-8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '-8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '-8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '8' 1`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, '8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 1`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'Carrie Mathison' 1`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, 'Carrie Mathison' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'Carrie Mathison' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'Carrie Mathison' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'Carrie Mathison' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'Carrie Mathison' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'Carrie Mathison' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'Carrie Mathison' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'Carrie Mathison' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'Carrie Mathison' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'false' 1`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, 'false' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'false' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'false' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'false' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'false' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'false' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'false' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'false' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'false' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'true' 1`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, 'true' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'true' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'true' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'true' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'true' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'true' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'true' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'true' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 'true' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, -8 1`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, -8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, -8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, -8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, -8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, -8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, -8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, -8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, -8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, -8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 0 1`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, 0 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 0 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 0 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 0 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 0 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 0 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 0 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 0 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 0 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 8 1`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, 8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, 8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, false 1`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, false 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, false 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, false 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, false 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, false 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, false 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, false 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, false 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, false 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, null 1`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, null 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, null 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, null 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, null 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, null 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, null 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, null 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, null 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, null 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, true 1`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, true 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, true 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, true 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, true 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, true 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, true 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, true 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, true 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, true 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", {"max": 3, "min": 1}, undefined 1`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, undefined 2`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, undefined 3`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, undefined 4`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, undefined 5`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, undefined 6`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, undefined 7`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, undefined 8`] = `"true, "`;

exports[`testCond "url", {"max": 3, "min": 1}, undefined 9`] = `"true, "`;

exports[`testCond "url", false, '' 1`] = `"true, "`;

exports[`testCond "url", false, '' 2`] = `"false, this is a required field"`;

exports[`testCond "url", false, '' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "url", false, '' 4`] = `"true, "`;

exports[`testCond "url", false, '' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "url", false, '' 6`] = `"true, "`;

exports[`testCond "url", false, '' 7`] = `"false, this must be at least 4 characters"`;

exports[`testCond "url", false, '' 8`] = `"false, this must be at least 4 characters"`;

exports[`testCond "url", false, '' 9`] = `"false, this must be at least 8 characters"`;

exports[`testCond "url", false, '' 10`] = `"true, "`;

exports[`testCond "url", false, '-8' 1`] = `"true, "`;

exports[`testCond "url", false, '-8' 2`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '-8' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "url", false, '-8' 4`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '-8' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "url", false, '-8' 6`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '-8' 7`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '-8' 8`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '-8' 9`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '-8' 10`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '8' 1`] = `"true, "`;

exports[`testCond "url", false, '8' 2`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '8' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "url", false, '8' 4`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '8' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "url", false, '8' 6`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '8' 7`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '8' 8`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '8' 9`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '8' 10`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '123e4567-e89b-12d3-a456-426614174000' 1`] = `"true, "`;

exports[`testCond "url", false, '123e4567-e89b-12d3-a456-426614174000' 2`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '123e4567-e89b-12d3-a456-426614174000' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "url", false, '123e4567-e89b-12d3-a456-426614174000' 4`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '123e4567-e89b-12d3-a456-426614174000' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "url", false, '123e4567-e89b-12d3-a456-426614174000' 6`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '123e4567-e89b-12d3-a456-426614174000' 7`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '123e4567-e89b-12d3-a456-426614174000' 8`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '123e4567-e89b-12d3-a456-426614174000' 9`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '123e4567-e89b-12d3-a456-426614174000' 10`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '2020-10-10T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "url", false, '2020-10-10T10:10:00.000Z' 2`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '2020-10-10T10:10:00.000Z' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "url", false, '2020-10-10T10:10:00.000Z' 4`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '2020-10-10T10:10:00.000Z' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "url", false, '2020-10-10T10:10:00.000Z' 6`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '2020-10-10T10:10:00.000Z' 7`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '2020-10-10T10:10:00.000Z' 8`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '2020-10-10T10:10:00.000Z' 9`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '2020-10-10T10:10:00.000Z' 10`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '9999-99-99T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "url", false, '9999-99-99T10:10:00.000Z' 2`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '9999-99-99T10:10:00.000Z' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "url", false, '9999-99-99T10:10:00.000Z' 4`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '9999-99-99T10:10:00.000Z' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "url", false, '9999-99-99T10:10:00.000Z' 6`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '9999-99-99T10:10:00.000Z' 7`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '9999-99-99T10:10:00.000Z' 8`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '9999-99-99T10:10:00.000Z' 9`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, '9999-99-99T10:10:00.000Z' 10`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 'Carrie Mathison' 1`] = `"true, "`;

exports[`testCond "url", false, 'Carrie Mathison' 2`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 'Carrie Mathison' 3`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 'Carrie Mathison' 4`] = `"false, this must not be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "url", false, 'Carrie Mathison' 5`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 'Carrie Mathison' 6`] = `"false, this must not be one of the following values: Carrie Mathison"`;

exports[`testCond "url", false, 'Carrie Mathison' 7`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 'Carrie Mathison' 8`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 'Carrie Mathison' 9`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 'Carrie Mathison' 10`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 'false' 1`] = `"true, "`;

exports[`testCond "url", false, 'false' 2`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 'false' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "url", false, 'false' 4`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 'false' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "url", false, 'false' 6`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 'false' 7`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 'false' 8`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 'false' 9`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 'false' 10`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 'true' 1`] = `"true, "`;

exports[`testCond "url", false, 'true' 2`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 'true' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "url", false, 'true' 4`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 'true' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "url", false, 'true' 6`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 'true' 7`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 'true' 8`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 'true' 9`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 'true' 10`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, -8 1`] = `"true, "`;

exports[`testCond "url", false, -8 2`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, -8 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "url", false, -8 4`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, -8 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "url", false, -8 6`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, -8 7`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, -8 8`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, -8 9`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, -8 10`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 0 1`] = `"true, "`;

exports[`testCond "url", false, 0 2`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 0 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "url", false, 0 4`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 0 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "url", false, 0 6`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 0 7`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 0 8`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 0 9`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 0 10`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 8 1`] = `"true, "`;

exports[`testCond "url", false, 8 2`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 8 3`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 8 4`] = `"false, this must not be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "url", false, 8 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "url", false, 8 6`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 8 7`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 8 8`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 8 9`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, 8 10`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, false 1`] = `"true, "`;

exports[`testCond "url", false, false 2`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, false 3`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, false 4`] = `"false, this must not be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "url", false, false 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "url", false, false 6`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, false 7`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, false 8`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, false 9`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, false 10`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, null 1`] = `"true, "`;

exports[`testCond "url", false, null 2`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", false, null 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "url", false, null 4`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", false, null 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "url", false, null 6`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", false, null 7`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", false, null 8`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", false, null 9`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", false, null 10`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", false, true 1`] = `"true, "`;

exports[`testCond "url", false, true 2`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, true 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "url", false, true 4`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, true 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "url", false, true 6`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, true 7`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, true 8`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, true 9`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, true 10`] = `"false, this must be a valid URL"`;

exports[`testCond "url", false, undefined 1`] = `"true, "`;

exports[`testCond "url", false, undefined 2`] = `"false, this is a required field"`;

exports[`testCond "url", false, undefined 3`] = `"true, "`;

exports[`testCond "url", false, undefined 4`] = `"true, "`;

exports[`testCond "url", false, undefined 5`] = `"true, "`;

exports[`testCond "url", false, undefined 6`] = `"true, "`;

exports[`testCond "url", false, undefined 7`] = `"true, "`;

exports[`testCond "url", false, undefined 8`] = `"true, "`;

exports[`testCond "url", false, undefined 9`] = `"true, "`;

exports[`testCond "url", true, '' 1`] = `"true, "`;

exports[`testCond "url", true, '' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '-8' 1`] = `"true, "`;

exports[`testCond "url", true, '-8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '-8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '-8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '-8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '-8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '-8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '-8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '-8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '-8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '8' 1`] = `"true, "`;

exports[`testCond "url", true, '8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '123e4567-e89b-12d3-a456-426614174000' 1`] = `"true, "`;

exports[`testCond "url", true, '123e4567-e89b-12d3-a456-426614174000' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '123e4567-e89b-12d3-a456-426614174000' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '123e4567-e89b-12d3-a456-426614174000' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '123e4567-e89b-12d3-a456-426614174000' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '123e4567-e89b-12d3-a456-426614174000' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '123e4567-e89b-12d3-a456-426614174000' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '123e4567-e89b-12d3-a456-426614174000' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '123e4567-e89b-12d3-a456-426614174000' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '123e4567-e89b-12d3-a456-426614174000' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '2020-10-10T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "url", true, '2020-10-10T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '2020-10-10T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '2020-10-10T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '2020-10-10T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '2020-10-10T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '2020-10-10T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '2020-10-10T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '2020-10-10T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '2020-10-10T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '9999-99-99T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "url", true, '9999-99-99T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '9999-99-99T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '9999-99-99T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '9999-99-99T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '9999-99-99T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '9999-99-99T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '9999-99-99T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '9999-99-99T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, '9999-99-99T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'Carrie Mathison' 1`] = `"true, "`;

exports[`testCond "url", true, 'Carrie Mathison' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'Carrie Mathison' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'Carrie Mathison' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'Carrie Mathison' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'Carrie Mathison' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'Carrie Mathison' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'Carrie Mathison' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'Carrie Mathison' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'Carrie Mathison' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'false' 1`] = `"true, "`;

exports[`testCond "url", true, 'false' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'false' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'false' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'false' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'false' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'false' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'false' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'false' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'false' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'true' 1`] = `"true, "`;

exports[`testCond "url", true, 'true' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'true' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'true' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'true' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'true' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'true' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'true' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'true' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 'true' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, -8 1`] = `"true, "`;

exports[`testCond "url", true, -8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, -8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, -8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, -8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, -8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, -8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, -8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, -8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, -8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 0 1`] = `"true, "`;

exports[`testCond "url", true, 0 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 0 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 0 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 0 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 0 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 0 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 0 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 0 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 0 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 8 1`] = `"true, "`;

exports[`testCond "url", true, 8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, 8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, false 1`] = `"true, "`;

exports[`testCond "url", true, false 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, false 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, false 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, false 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, false 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, false 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, false 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, false 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, false 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, null 1`] = `"true, "`;

exports[`testCond "url", true, null 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, null 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, null 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, null 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, null 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, null 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, null 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, null 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, null 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, true 1`] = `"true, "`;

exports[`testCond "url", true, true 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, true 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, true 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, true 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, true 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, true 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, true 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, true 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, true 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "url", true, undefined 1`] = `"true, "`;

exports[`testCond "url", true, undefined 2`] = `"true, "`;

exports[`testCond "url", true, undefined 3`] = `"true, "`;

exports[`testCond "url", true, undefined 4`] = `"true, "`;

exports[`testCond "url", true, undefined 5`] = `"true, "`;

exports[`testCond "url", true, undefined 6`] = `"true, "`;

exports[`testCond "url", true, undefined 7`] = `"true, "`;

exports[`testCond "url", true, undefined 8`] = `"true, "`;

exports[`testCond "url", true, undefined 9`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '' 1`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '-8' 1`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '-8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '-8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '-8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '-8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '-8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '-8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '-8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '-8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '-8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '8' 1`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 1`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '123e4567-e89b-12d3-a456-426614174000' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '2020-10-10T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, '9999-99-99T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'Carrie Mathison' 1`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'Carrie Mathison' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'Carrie Mathison' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'Carrie Mathison' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'Carrie Mathison' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'Carrie Mathison' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'Carrie Mathison' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'Carrie Mathison' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'Carrie Mathison' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'Carrie Mathison' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'false' 1`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'false' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'false' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'false' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'false' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'false' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'false' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'false' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'false' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'false' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'true' 1`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'true' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'true' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'true' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'true' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'true' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'true' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'true' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'true' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 'true' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, -8 1`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, -8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, -8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, -8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, -8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, -8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, -8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, -8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, -8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, -8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 0 1`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 0 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 0 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 0 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 0 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 0 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 0 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 0 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 0 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 0 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 8 1`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, 8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, false 1`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, false 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, false 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, false 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, false 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, false 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, false 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, false 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, false 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, false 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, null 1`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, null 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, null 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, null 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, null 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, null 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, null 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, null 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, null 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, null 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, true 1`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, true 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, true 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, true 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, true 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, true 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, true 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, true 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, true 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, true 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", {"max": 3, "min": 1}, undefined 1`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, undefined 2`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, undefined 3`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, undefined 4`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, undefined 5`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, undefined 6`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, undefined 7`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, undefined 8`] = `"true, "`;

exports[`testCond "uuid", {"max": 3, "min": 1}, undefined 9`] = `"true, "`;

exports[`testCond "uuid", false, '' 1`] = `"true, "`;

exports[`testCond "uuid", false, '' 2`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "uuid", false, '' 4`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "uuid", false, '' 6`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '' 7`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '' 8`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '' 9`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '' 10`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '-8' 1`] = `"true, "`;

exports[`testCond "uuid", false, '-8' 2`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '-8' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "uuid", false, '-8' 4`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '-8' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "uuid", false, '-8' 6`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '-8' 7`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '-8' 8`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '-8' 9`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '-8' 10`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '8' 1`] = `"true, "`;

exports[`testCond "uuid", false, '8' 2`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '8' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "uuid", false, '8' 4`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '8' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "uuid", false, '8' 6`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '8' 7`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '8' 8`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '8' 9`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '8' 10`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '123e4567-e89b-12d3-a456-426614174000' 1`] = `"true, "`;

exports[`testCond "uuid", false, '123e4567-e89b-12d3-a456-426614174000' 2`] = `"true, "`;

exports[`testCond "uuid", false, '123e4567-e89b-12d3-a456-426614174000' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "uuid", false, '123e4567-e89b-12d3-a456-426614174000' 4`] = `"true, "`;

exports[`testCond "uuid", false, '123e4567-e89b-12d3-a456-426614174000' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "uuid", false, '123e4567-e89b-12d3-a456-426614174000' 6`] = `"true, "`;

exports[`testCond "uuid", false, '123e4567-e89b-12d3-a456-426614174000' 7`] = `"true, "`;

exports[`testCond "uuid", false, '123e4567-e89b-12d3-a456-426614174000' 8`] = `"false, this must be at most 8 characters"`;

exports[`testCond "uuid", false, '123e4567-e89b-12d3-a456-426614174000' 9`] = `"true, "`;

exports[`testCond "uuid", false, '2020-10-10T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "uuid", false, '2020-10-10T10:10:00.000Z' 2`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '2020-10-10T10:10:00.000Z' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "uuid", false, '2020-10-10T10:10:00.000Z' 4`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '2020-10-10T10:10:00.000Z' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "uuid", false, '2020-10-10T10:10:00.000Z' 6`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '2020-10-10T10:10:00.000Z' 7`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '2020-10-10T10:10:00.000Z' 8`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '2020-10-10T10:10:00.000Z' 9`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '2020-10-10T10:10:00.000Z' 10`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '9999-99-99T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "uuid", false, '9999-99-99T10:10:00.000Z' 2`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '9999-99-99T10:10:00.000Z' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "uuid", false, '9999-99-99T10:10:00.000Z' 4`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '9999-99-99T10:10:00.000Z' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "uuid", false, '9999-99-99T10:10:00.000Z' 6`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '9999-99-99T10:10:00.000Z' 7`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '9999-99-99T10:10:00.000Z' 8`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '9999-99-99T10:10:00.000Z' 9`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, '9999-99-99T10:10:00.000Z' 10`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 'Carrie Mathison' 1`] = `"true, "`;

exports[`testCond "uuid", false, 'Carrie Mathison' 2`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 'Carrie Mathison' 3`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 'Carrie Mathison' 4`] = `"false, this must not be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "uuid", false, 'Carrie Mathison' 5`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 'Carrie Mathison' 6`] = `"false, this must not be one of the following values: Carrie Mathison"`;

exports[`testCond "uuid", false, 'Carrie Mathison' 7`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 'Carrie Mathison' 8`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 'Carrie Mathison' 9`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 'Carrie Mathison' 10`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 'false' 1`] = `"true, "`;

exports[`testCond "uuid", false, 'false' 2`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 'false' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "uuid", false, 'false' 4`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 'false' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "uuid", false, 'false' 6`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 'false' 7`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 'false' 8`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 'false' 9`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 'false' 10`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 'true' 1`] = `"true, "`;

exports[`testCond "uuid", false, 'true' 2`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 'true' 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "uuid", false, 'true' 4`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 'true' 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "uuid", false, 'true' 6`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 'true' 7`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 'true' 8`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 'true' 9`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 'true' 10`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, -8 1`] = `"true, "`;

exports[`testCond "uuid", false, -8 2`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, -8 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "uuid", false, -8 4`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, -8 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "uuid", false, -8 6`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, -8 7`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, -8 8`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, -8 9`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, -8 10`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 0 1`] = `"true, "`;

exports[`testCond "uuid", false, 0 2`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 0 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "uuid", false, 0 4`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 0 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "uuid", false, 0 6`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 0 7`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 0 8`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 0 9`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 0 10`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 8 1`] = `"true, "`;

exports[`testCond "uuid", false, 8 2`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 8 3`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 8 4`] = `"false, this must not be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "uuid", false, 8 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "uuid", false, 8 6`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 8 7`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 8 8`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 8 9`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, 8 10`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, false 1`] = `"true, "`;

exports[`testCond "uuid", false, false 2`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, false 3`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, false 4`] = `"false, this must not be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "uuid", false, false 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "uuid", false, false 6`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, false 7`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, false 8`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, false 9`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, false 10`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, null 1`] = `"true, "`;

exports[`testCond "uuid", false, null 2`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", false, null 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "uuid", false, null 4`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", false, null 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "uuid", false, null 6`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", false, null 7`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", false, null 8`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", false, null 9`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", false, null 10`] = `
"false, this must be a \`string\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", false, true 1`] = `"true, "`;

exports[`testCond "uuid", false, true 2`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, true 3`] = `"false, this must be one of the following values: Carrie Mathison, false, 8"`;

exports[`testCond "uuid", false, true 4`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, true 5`] = `"false, this must be one of the following values: Carrie Mathison"`;

exports[`testCond "uuid", false, true 6`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, true 7`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, true 8`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, true 9`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, true 10`] = `"false, this must be a valid UUID"`;

exports[`testCond "uuid", false, undefined 1`] = `"true, "`;

exports[`testCond "uuid", false, undefined 2`] = `"false, this is a required field"`;

exports[`testCond "uuid", false, undefined 3`] = `"true, "`;

exports[`testCond "uuid", false, undefined 4`] = `"true, "`;

exports[`testCond "uuid", false, undefined 5`] = `"true, "`;

exports[`testCond "uuid", false, undefined 6`] = `"true, "`;

exports[`testCond "uuid", false, undefined 7`] = `"true, "`;

exports[`testCond "uuid", false, undefined 8`] = `"true, "`;

exports[`testCond "uuid", false, undefined 9`] = `"true, "`;

exports[`testCond "uuid", true, '' 1`] = `"true, "`;

exports[`testCond "uuid", true, '' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '-8' 1`] = `"true, "`;

exports[`testCond "uuid", true, '-8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '-8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '-8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '-8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '-8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '-8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '-8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '-8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '-8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"-8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '8' 1`] = `"true, "`;

exports[`testCond "uuid", true, '8' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '8' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '8' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '8' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '8' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '8' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '8' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '8' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '8' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"8\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '123e4567-e89b-12d3-a456-426614174000' 1`] = `"true, "`;

exports[`testCond "uuid", true, '123e4567-e89b-12d3-a456-426614174000' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '123e4567-e89b-12d3-a456-426614174000' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '123e4567-e89b-12d3-a456-426614174000' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '123e4567-e89b-12d3-a456-426614174000' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '123e4567-e89b-12d3-a456-426614174000' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '123e4567-e89b-12d3-a456-426614174000' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '123e4567-e89b-12d3-a456-426614174000' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '123e4567-e89b-12d3-a456-426614174000' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '123e4567-e89b-12d3-a456-426614174000' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"123e4567-e89b-12d3-a456-426614174000\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '2020-10-10T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "uuid", true, '2020-10-10T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '2020-10-10T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '2020-10-10T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '2020-10-10T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '2020-10-10T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '2020-10-10T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '2020-10-10T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '2020-10-10T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '2020-10-10T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"2020-10-10T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '9999-99-99T10:10:00.000Z' 1`] = `"true, "`;

exports[`testCond "uuid", true, '9999-99-99T10:10:00.000Z' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '9999-99-99T10:10:00.000Z' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '9999-99-99T10:10:00.000Z' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '9999-99-99T10:10:00.000Z' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '9999-99-99T10:10:00.000Z' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '9999-99-99T10:10:00.000Z' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '9999-99-99T10:10:00.000Z' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '9999-99-99T10:10:00.000Z' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, '9999-99-99T10:10:00.000Z' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"9999-99-99T10:10:00.000Z\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'Carrie Mathison' 1`] = `"true, "`;

exports[`testCond "uuid", true, 'Carrie Mathison' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'Carrie Mathison' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'Carrie Mathison' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'Carrie Mathison' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'Carrie Mathison' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'Carrie Mathison' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'Carrie Mathison' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'Carrie Mathison' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'Carrie Mathison' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"Carrie Mathison\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'false' 1`] = `"true, "`;

exports[`testCond "uuid", true, 'false' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'false' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'false' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'false' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'false' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'false' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'false' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'false' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'false' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"false\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'true' 1`] = `"true, "`;

exports[`testCond "uuid", true, 'true' 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'true' 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'true' 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'true' 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'true' 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'true' 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'true' 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'true' 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 'true' 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`\\"true\\"\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, -8 1`] = `"true, "`;

exports[`testCond "uuid", true, -8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, -8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, -8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, -8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, -8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, -8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, -8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, -8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, -8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`-8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 0 1`] = `"true, "`;

exports[`testCond "uuid", true, 0 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 0 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 0 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 0 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 0 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 0 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 0 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 0 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 0 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`0\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 8 1`] = `"true, "`;

exports[`testCond "uuid", true, 8 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 8 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 8 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 8 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 8 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 8 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 8 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 8 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, 8 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`8\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, false 1`] = `"true, "`;

exports[`testCond "uuid", true, false 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, false 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, false 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, false 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, false 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, false 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, false 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, false 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, false 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`false\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, null 1`] = `"true, "`;

exports[`testCond "uuid", true, null 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, null 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, null 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, null 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, null 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, null 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, null 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, null 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, null 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\`.
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, true 1`] = `"true, "`;

exports[`testCond "uuid", true, true 2`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, true 3`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, true 4`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, true 5`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, true 6`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, true 7`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, true 8`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, true 9`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, true 10`] = `
"false, this must be a \`array\` type, but the final value was: \`null\` (cast from the value \`true\`).
 If \\"null\\" is intended as an empty value be sure to mark the schema as \`.nullable()\`"
`;

exports[`testCond "uuid", true, undefined 1`] = `"true, "`;

exports[`testCond "uuid", true, undefined 2`] = `"true, "`;

exports[`testCond "uuid", true, undefined 3`] = `"true, "`;

exports[`testCond "uuid", true, undefined 4`] = `"true, "`;

exports[`testCond "uuid", true, undefined 5`] = `"true, "`;

exports[`testCond "uuid", true, undefined 6`] = `"true, "`;

exports[`testCond "uuid", true, undefined 7`] = `"true, "`;

exports[`testCond "uuid", true, undefined 8`] = `"true, "`;

exports[`testCond "uuid", true, undefined 9`] = `"true, "`;
